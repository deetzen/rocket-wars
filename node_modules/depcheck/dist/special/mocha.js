"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = parseMocha;

var _fs = _interopRequireDefault(require("fs"));

var _path = _interopRequireDefault(require("path"));

var _lodash = _interopRequireDefault(require("lodash"));

var _requirePackageName = _interopRequireDefault(require("require-package-name"));

var _utils = require("../utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getOpts(script) {
  const argvs = script.split(' ').filter(argv => argv);
  const optsIndex = argvs.indexOf('--opts');
  return optsIndex !== -1 ? argvs[optsIndex + 1] : null;
}

function getRequires(content, deps) {
  return content.split('\n').map(line => line.trim()).filter(line => line.indexOf('--require ') === 0).map(line => line.substring('--require '.length).trim()).map(_requirePackageName.default).filter(name => deps.indexOf(name) !== -1);
}

function parseMocha(content, filepath, deps, rootDir) {
  const defaultOptPath = _path.default.resolve(rootDir, 'test/mocha.opts');

  if (filepath === defaultOptPath) {
    return getRequires(content, deps);
  } // get mocha.opts from scripts


  const requires = (0, _lodash.default)((0, _utils.getScripts)(filepath, content)).filter(script => script.indexOf('mocha') !== -1).map(script => getOpts(script)).filter(opts => opts).map(opts => _path.default.resolve(filepath, '..', opts)).map(optPath => _fs.default.readFileSync(optPath, 'utf-8')) // TODO async read file
  .map(optContent => getRequires(optContent, deps)).flatten().value();
  return requires;
}

module.exports = exports.default;